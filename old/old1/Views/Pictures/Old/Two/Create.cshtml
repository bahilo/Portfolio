@model DagoWebPortfolio.Models.PicturesViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Pictures", FormMethod.Post,
                                        new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>PicturesViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.path, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.path, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.path, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FileName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FileName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FileName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="control-label col-md-2">
                File
            </div>
            <div class="col-md-10">
                <input id="ImagePath" title="Upload a project image" type="file" name="file" required />
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.link, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.link, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.link, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectDetailsViewModelID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="radio" name="link_picture_to" value="project" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10 col-md-offset-2">
                @Html.DropDownList("ProjectDetailsViewModelID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProjectDetailsViewModelID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.EducationViewModelID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="radio" name="link_picture_to" value="education" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10 col-md-offset-2">
                @Html.DropDownList("EducationViewModelID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EducationViewModelID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ExperiencesViewModelID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="radio" name="link_picture_to" value="experience" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10 col-md-offset-2">
                @Html.DropDownList("ExperiencesViewModelID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExperiencesViewModelID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SkillsViewModelID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="radio" name="link_picture_to" value="skill" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10 col-md-offset-2">
                @Html.DropDownList("SkillsViewModelID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SkillsViewModelID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
