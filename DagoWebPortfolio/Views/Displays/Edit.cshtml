@using System.Globalization;
@using DagoWebPortfolio.Models;
@model DagoWebPortfolio.Models.DisplayViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>DisplayViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.Lang, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(model => Model.Title, new SelectList(new string[] { "Coding", "Business", "Others" }, Model.Title ?? "--None--"), "--None--", new { htmlAttributes = new { @class = "form-control" } })*@
                <select name="selectedLang">
                    @foreach (var culture in (List<CultureInfo>)ViewBag.Cultures)
                    {                        
                        if (Model.Lang != null && Model.Lang.Equals(culture.Name))
                        {
                            <option value="@culture.Name" selected>@culture.DisplayName</option>
                        }
                        else
                        {
                            <option value="@culture.Name">@culture.DisplayName</option>
                        }
                    }
                </select>
                @*@Html.se(model => model.CategoryViewModel.Title, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => Model.Lang, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>


        @* here are the foreign keys *@

        <div class="form-group">
            <div class="col-md-1">
                Linked to None
            </div>
            <div class="col-md-9">

                @if (Model.ProjectDetailsViewModelID == null && Model.ExperiencesViewModelID == null && Model.EducationViewModelID == null && Model.SkillsViewModelID == null && Model.PicturesViewModelID == null)
                {
                    <input type="radio" name="link_display_to" value="none" checked />
                }
                else
                {
                    <input type="radio" name="link_display_to" value="none" />
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PicturesViewModelID, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-9">
                @if (!Model.PicturesViewModelID.Equals(null) && Model.PicturesViewModelID != 0)
                {
                    <input type="radio" name="link_display_to" value="picture" checked />
                }
                else
                {
                    <input type="radio" name="link_display_to" value="picture" />
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-9 col-md-offset-1">
                @Html.DropDownList("PicturesViewModelID", null, "Select Picture", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PicturesViewModelID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectsViewModelID, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-9">
                @if (!Model.ProjectsViewModelID.Equals(null) && Model.ProjectsViewModelID != 0)
                {
                    <input type="radio" name="link_display_to" value="project" checked />
                }
                else
                {
                    <input type="radio" name="link_display_to" value="project" />
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-9 col-md-offset-1">
                @Html.DropDownList("ProjectsViewModelID", null, "Select Project", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProjectsViewModelID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectDetailsViewModelID, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-9">
                @if (!Model.ProjectDetailsViewModelID.Equals(null) && Model.ProjectDetailsViewModelID != 0)
                {
                    <input type="radio" name="link_display_to" value="project-detail" checked />
                }
                else
                {
                    <input type="radio" name="link_display_to" value="project-detail" />
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-9 col-md-offset-1">
                @Html.DropDownList("ProjectDetailsViewModelID", null, "Select Project", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProjectDetailsViewModelID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EducationViewModelID, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-9">
                @if (!Model.EducationViewModelID.Equals(null) && Model.EducationViewModelID != 0)
                {
                    <input type="radio" name="link_display_to" value="education" checked>
                }
                else
                {
                    <input type="radio" name="link_display_to" value="education" />
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-9 col-md-offset-1">
                @Html.DropDownList("EducationViewModelID", null, "Select Education", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EducationViewModelID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExperiencesViewModelID, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-9">
                @if (!Model.ExperiencesViewModelID.Equals(null) && Model.ExperiencesViewModelID != 0)
                {
                    <input type="radio" name="link_display_to" value="experience" checked>
                }
                else
                {
                    <input type="radio" name="link_display_to" value="experience" />
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-9 col-md-offset-1">
                @Html.DropDownList("ExperiencesViewModelID", null, "Select Experience", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExperiencesViewModelID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SkillsViewModelID, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-9">
                @if (!Model.SkillsViewModelID.Equals(null) && Model.SkillsViewModelID != 0)
                {
                    <input type="radio" name="link_display_to" value="skill" checked>
                }
                else
                {
                    <input type="radio" name="link_display_to" value="skill" />
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-9 col-md-offset-1">
                @Html.DropDownList("SkillsViewModelID", null, "Select Skills", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SkillsViewModelID, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
