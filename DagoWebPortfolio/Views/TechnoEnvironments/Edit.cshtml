@model DagoWebPortfolio.Models.TechnoEnvironmentsViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>TechnoEnvironmentsViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="selectedCategory">
                    @foreach (var category in (SelectList)ViewBag.CategoriesID)
                    {
                        if (category.Text == Model.Category)
                        {
                            <option value="@category.Text" selected>@category.Text</option>
                        }
                        else
                        {
                            <option value="@category.Text">@category.Text</option>
                        }
                    }
                </select>
                @*@Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>        

        <div class="form-group">
            @Html.LabelFor(model => model.link, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.link, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.link, "", new { @class = "text-danger" })
            </div>
        </div>


        @* here are the foreign keys *@

        <div class="form-group">
            <div class="col-md-1">
                Linked to None
            </div>
            <div class="col-md-9">

                @if (Model.ProjectDetailsViewModelID == null && Model.ExperiencesViewModelID == null && Model.EducationViewModelID == null && Model.SkillsViewModelID == null && Model.PicturesViewModelID == null)
                {
                    <input type="checkbox" name="link_TechEnv_to_none" value="true" checked />
                }
                else
                {
                    <input type="checkbox" name="link_TechEnv_to_none" value="true"/>                    
                }
                <input type="hidden" name="link_TechEnv_to_none" value="false" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PicturesViewModelID, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-9">
                @if (!Model.PicturesViewModelID.Equals(null) && Model.PicturesViewModelID != 0)
                {
                    <input type="checkbox" name="link_TechEnv_to_picture" value="true" checked/>
                }
                else
                {
                    <input type="checkbox" name="link_TechEnv_to_picture" value="true" />                    
                }
                <input type="hidden" name="link_TechEnv_to_picture" value="false" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-9 col-md-offset-1">
                @Html.DropDownList("PicturesViewModelID", null, "Select Picture", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PicturesViewModelID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectsViewModelID, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-9">
                @if (!Model.ProjectsViewModelID.Equals(null) && Model.ProjectsViewModelID != 0)
                {
                    <input type="checkbox" name="link_TechEnv_to_project" value="true" checked/>
                }
                else
                {
                    <input type="checkbox" name="link_TechEnv_to_project" value="true" />
                }
                <input type="hidden" name="link_TechEnv_to_project" value="false" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-9 col-md-offset-1">
                @Html.DropDownList("ProjectsViewModelID", null, "Select Project", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProjectsViewModelID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectDetailsViewModelID, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-9">
                @if (!Model.ProjectDetailsViewModelID.Equals(null) && Model.ProjectDetailsViewModelID != 0)
                {
                    <input type="checkbox" name="link_TechEnv_to_project_detail" value="true" checked/>
                }
                else
                {
                    <input type="checkbox" name="link_TechEnv_to_project_detail" value="true" />
                }
                <input type="hidden" name="link_TechEnv_to_project_detail" value="false" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-9 col-md-offset-1">
                @Html.DropDownList("ProjectDetailsViewModelID", null, "Select Project", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProjectDetailsViewModelID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EducationViewModelID, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-9">
                @if (!Model.EducationViewModelID.Equals(null) && Model.EducationViewModelID != 0)
                {
                    <input type="checkbox" name="link_TechEnv_to_education" value="true" checked/>
                }
                else
                {
                    <input type="checkbox" name="link_TechEnv_to_education" value="true" />
                }
                <input type="hidden" name="link_TechEnv_to_education" value="false" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-9 col-md-offset-1">
                @Html.DropDownList("EducationViewModelID", null, "Select Education", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EducationViewModelID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExperiencesViewModelID, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-9">
                @if (!Model.ExperiencesViewModelID.Equals(null) && Model.ExperiencesViewModelID != 0)
                {
                    <input type="checkbox" name="link_TechEnv_to_experience" value="true" checked/>
                }
                else
                {
                    <input type="checkbox" name="link_TechEnv_to_experience" value="true" />
                }
                <input type="hidden" name="link_TechEnv_to_experience" value="false" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-9 col-md-offset-1">
                @Html.DropDownList("ExperiencesViewModelID", null, "Select Experience", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExperiencesViewModelID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SkillsViewModelID, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-9">
                @if (!Model.SkillsViewModelID.Equals(null) && Model.SkillsViewModelID != 0)
                {
                    <input type="checkbox" name="link_TechEnv_to_skill" value="true" checked/>
                }
                else
                {
                    <input type="checkbox" name="link_TechEnv_to_skill" value="true" />
                }
                <input type="hidden" name="link_TechEnv_to_skill" value="false" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-9 col-md-offset-1">
                @Html.DropDownList("SkillsViewModelID", null, "Select Skills", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SkillsViewModelID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
