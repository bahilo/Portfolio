@model DagoWebPortfolio.Models.PicturesViewModel

@{
    ViewBag.Title = "Edit";
}
<div class="container">
    <h2>Edit</h2>


    @using (Html.BeginForm("Edit", "Pictures", FormMethod.Post,
                                                        new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>PicturesViewModel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)


            <input type="hidden" name="origineFileName" value="@Html.DisplayFor(model => model.FileName)" />


            <div class="form-group">
                @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="control-label col-md-2">
                    File
                </div>
                <div class="col-md-4">
                    <input id="ImagePath" title="Upload a project image" type="file" name="file" />
                </div>
                <div class="col-md-4">
                    <img style="height:100px;width:100%;" src="@Html.DisplayFor(model=>model.path)@Html.DisplayFor(model=>model.FileName)" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.path, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.path, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.path, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FileName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FileName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FileName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.link, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.link, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.link, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProjectDetailsViewModelID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (!Model.ProjectDetailsViewModelID.Equals(null))
                {
                        <input type="radio" name="link_picture_to" value="project" checked />
                    }
                    else
                    {
                        <input type="radio" name="link_picture_to" value="project" />
                    }
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10 col-md-offset-2">
                    @Html.DropDownList("ProjectDetailsViewModelID", null, "Select Project", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProjectDetailsViewModelID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EducationViewModelID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (!Model.EducationViewModelID.Equals(null))
                {
                        <input type="radio" name="link_picture_to" value="education" checked>
                    }
                    else
                    {
                        <input type="radio" name="link_picture_to" value="education" />
                    }
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10 col-md-offset-2">
                    @Html.DropDownList("EducationViewModelID", null, "Select Education", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EducationViewModelID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ExperiencesViewModelID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (!Model.ExperiencesViewModelID.Equals(null))
                {
                        <input type="radio" name="link_picture_to" value="experience" checked>
                    }
                    else
                    {
                        <input type="radio" name="link_picture_to" value="experience" />
                    }
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10 col-md-offset-2">
                    @Html.DropDownList("ExperiencesViewModelID", null, "Select Experience", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ExperiencesViewModelID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SkillsViewModelID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (!Model.SkillsViewModelID.Equals(null))
                {
                        <input type="radio" name="link_picture_to" value="skill" checked>
                    }
                    else
                    {
                        <input type="radio" name="link_picture_to" value="skill" />
                    }
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10 col-md-offset-2">
                    @Html.DropDownList("SkillsViewModelID", null, "Select Skills", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SkillsViewModelID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
